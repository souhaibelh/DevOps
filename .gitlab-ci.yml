stages:
  - build
  - test
  - deploy

spring-build-job:
  stage: build
  image: eclipse-temurin:17-jdk-alpine
  rules:
    - changes:
        - service-java/**/*
  script:
    - chmod +x ./service-java/mvnw
    - ./service-java/mvnw -f ./service-java/pom.xml compile

python-build-job:
  stage: build
  image: python:3.12-slim
  rules:
    - changes:
        - service-python/**/* 
  script:
    - pip install -r ./service-python/requirements.txt
    - python -m compileall ./service-python

spring-test-job:
  stage: test
  image: eclipse-temurin:17-jdk-alpine
  rules:
    - changes:
        - service-java/**/*
  script:
    - chmod +x ./service-java/mvnw
    - ./service-java/mvnw -f ./service-java/pom.xml test

python-test-job:
  stage: test
  image: python:3.12-slim
  rules:
    - changes:
        - service-python/**/*  
  script:
    - pip install -r ./service-python/requirements.txt
    - pip install pytest
    - pytest ./service-python/test_app.py

docker-spring-build-job:
  image: docker:28.3.3-cli
  services:
    - name: docker:28.3.3-dind
      privileged: true
  variables:
    DOCKER_TLS_CERTDIR: "/certs"     
  stage: deploy
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -t souhaibhassouni/spring-boot-app:1.0 -f ./service-java/spring.Dockerfile ./service-java
    - docker push souhaibhassouni/spring-boot-app:1.0

docker-python-build-job:
  image: docker:28.3.3-cli
  services:
    - name: docker:28.3.3-dind
      privileged: true
  variables:
    DOCKER_TLS_CERTDIR: "/certs"  
  stage: deploy
  before_script:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -t souhaibhassouni/flask:1.0 -f ./service-python/flask.Dockerfile ./service-python
    - docker push souhaibhassouni/flask:1.0  